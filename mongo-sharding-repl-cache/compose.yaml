services:
  rds1:
    container_name: rds1
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - rds1_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.10

  mng_rs1_1:
    container_name: mng_rs1_1
    image: mongo:latest
    networks:
     pymongo-network:
        ipv4_address: 173.16.0.11
    ports:
      - "27011:27011"
    volumes:
      - mng_rs1_1_data:/data/db
    restart: always
    command:
      [
        "--shardsvr",
        "--replSet",  "rs1",
        "--bind_ip_all",
        "--port",  "27011"
      ]

  mng_rs1_2:
    container_name: mng_rs1_2
    image: mongo:latest
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.12
    ports:
      - "27012:27012"
    volumes:
      - mng_rs1_2_data:/data/db
    restart: always
    command:
      [
        "--shardsvr",
        "--replSet",  "rs1",
        "--bind_ip_all",
        "--port",  "27012"
      ]

  mng_rs1_3:
    container_name: mng_rs1_3
    image: mongo:latest
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.13
    ports:
      - "27013:27013"
    volumes:
      - mng_rs1_3_data:/data/db
    restart: always
    command:
      [
        "--shardsvr",
        "--replSet",  "rs1",
        "--bind_ip_all",
        "--port",  "27013"
      ]

  mng_rs2_1:
    container_name: mng_rs2_1
    image: mongo:latest
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.21
    ports:
      - "27021:27021"
    volumes:
      - mng_rs2_1_data:/data/db
    restart: always
    command:
      [
        "--shardsvr",
        "--replSet",  "rs2",
        "--bind_ip_all",
        "--port",  "27021"
      ]

  mng_rs2_2:
    container_name: mng_rs2_2
    image: mongo:latest
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.22
    ports:
      - "27022:27022"
    volumes:
      - mng_rs2_2_data:/data/db
    restart: always
    command:
      [
        "--shardsvr",
        "--replSet",  "rs2",
        "--bind_ip_all",
        "--port",  "27022"
      ]

  mng_rs2_3:
    container_name: mng_rs2_3
    image: mongo:latest
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.23
    ports:
      - "27023:27023"
    volumes:
      - mng_rs2_3_data:/data/db
    restart: always
    command:
      [
        "--shardsvr",
        "--replSet",  "rs2",
        "--bind_ip_all",
        "--port",  "27023"
      ]

  mng_config1:
    container_name: mng_config1
    image: mongo:latest
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.18
    ports:
      - "27018:27018"
    volumes:
      - mng_config1_data:/data/db
    restart: always
    command:
      [
        "--configsvr",
        "--replSet", "config_server",
        "--bind_ip_all",
        "--port", "27018"
      ]

  mng_router1:
    container_name: mng_router1
    image: mongo:latest
    depends_on:
      - mng_config1
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.17
    ports:
      - "27017:27017"
    restart: always
    command:
      [
        "mongos",
        "--configdb", "config_server/mng_config1:27018",
        "--bind_ip_all",
        "--port", "27017"
      ]

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: api_app/Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mng_router1
    networks:
      pymongo-network:
        ipv4_address: 173.16.0.80
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mng_router1:27017"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://rds1:6379"


networks:
  pymongo-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.16.0.0/16


volumes:
  rds1_data:
  mongodb1_data_container:
  mng_config1_data:
  mng_rs1_1_data:
  mng_rs1_2_data:
  mng_rs1_3_data:
  mng_rs2_1_data:
  mng_rs2_2_data:
  mng_rs2_3_data: